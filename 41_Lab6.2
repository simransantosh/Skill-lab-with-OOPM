[15:42, 11/5/2021] Simran K: #include<iostream.h>
#include<fstream.h>
#include<conio.h>
#include<stdio.h>

//class Employee
class Employee
{
public:
char name[30];
int salary;
};

//class Manager inherited from class Employee
class Manager:public Employee
{
public:
char dept[30];

//to getdata from the user
void getData()
{
cout<<"\nEnter the following information about manager:\nName :";
gets(name);
cout<<"\nDepartment :";
gets(dept);
cout<<"\nSalary :";
cin>>salary;
}

//to show data to the user
void show()
{
cout<<"\n Manager Name :"<<name<<"\nDepartment :"<<dept<<"\nSalary :"<<salary;
}
};

//class Executive inheriting Manager class
class Executive:public Manager
{
public:
Executive()
{
cout<<"\nExecutive";
getData();
show();
}
};

//main() function for testing
void main()
{
clrscr();
Executive e;
getch();
}
[15:49, 11/5/2021] Simran K: #include<iostream.h>
#include<fstream.h>
#include<conio.h>
#include<stdio.h>


class Employee
{
public:
char name[30];
int salary;
};

//class Manager inherited from class Employee
class Manager:public Employee
{
public:
char dept[30];

void getData()
{
cout<<"\nEmployee Name :";
gets(name);
cout<<"\nDepartment :";
gets(dept);
cout<<"\nSalary :";
cin>>salary;
}

//to show data to the user
void show()
{
cout<<"\nEmployee Name :"<<name<<"\nDepartment :"<<dept<<"\nSalary :"<<salary;
}
};


class Executive:public Manager
{
public:
Executive()
{
cout<<"\nPermanent Employee";
getData();
show();
}
};


void main()
{
clrscr();
Executive e;
getch();
}
